using CourseZero.Filters;
using CourseZero.Models;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Threading.Tasks;

namespace CourseZero.Controllers
{
    [Route("api/[controller]")]
    public class FileController : Controller
    {
        readonly UploadedFileContext uploadedFileContext;
        public FileController(UploadedFileContext uploadedFileContext)
        {
            this.uploadedFileContext = uploadedFileContext;
        }
        [HttpPost]
        [Route("[action]")]
        [Consumes("application/json")]
        [ServiceFilter(typeof(AuthRequired))]
        public async Task<IActionResult> GetFileByFileid([FromBody]GetFileByFileid_Reuqest request)
        {
            UploadedFile requested_file = await uploadedFileContext.Get_File_By_FileID(request.file_ID);
            if (requested_file == null)
                return new NotFoundResult();
            if (requested_file.Stored_Internally)
                return File(requested_file.Binary, "application/octet-stream");
            else if (System.IO.File.Exists((AppDomain.CurrentDomain.BaseDirectory + "Uploads/" + request.file_ID + requested_file.File_Typename)))
                return PhysicalFile(AppDomain.CurrentDomain.BaseDirectory + "Uploads/" + request.file_ID + requested_file.File_Typename, "application/octet-stream");
            return new NotFoundResult();
        }
        /// <summary>
        /// Return file Thumbnail (.png) generated by the server
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("[action]")]
        [Consumes("application/json")]
        [ServiceFilter(typeof(AuthRequired))]
        public IActionResult GetThumbnailByFileid([FromBody]GetThumbnailByFileid_Request request)
        {
            if (System.IO.File.Exists((AppDomain.CurrentDomain.BaseDirectory + "UploadsThumbnail/" + request.file_ID + ".png")))
                return PhysicalFile(AppDomain.CurrentDomain.BaseDirectory + "UploadsThumbnail/" + request.file_ID + ".png", "application/octet-stream");
            return new NotFoundResult();
        }
        public class GetFileByFileid_Reuqest
        {
            [Required]
            [StringLength(128, MinimumLength = 128)]
            public string auth_token { get; set; }
            [Required]
            public int file_ID { get; set; }
        }
        public class GetThumbnailByFileid_Request
        {
            [Required]
            [StringLength(128, MinimumLength = 128)]
            public string auth_token { get; set; }
            [Required]
            public int file_ID { get; set; }
        }
    }
}
