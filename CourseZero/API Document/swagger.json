{"swagger":"2.0","info":{"version":"2019/2/2 下午 07:47:19","title":"API Reference"},"paths":{"/api/Login":{"post":{"tags":["Login"],"operationId":"Post","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/Login_Request"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Login_Response"}}}}},"/api/Register":{"post":{"tags":["Register"],"operationId":"Post","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/Register_Request"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Register_Response"}}}}},"/api/Register/Verify_Email/{username}/{hash}":{"get":{"tags":["Register"],"operationId":"Verify_Email","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"username","in":"path","required":true,"type":"string"},{"name":"hash","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"type":"string"}}}}},"/api/Session/Logout":{"post":{"tags":["Session"],"operationId":"Logout","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/Logout_Request"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Logout_Response"}}}}},"/api/Session/Get_All_Sessions":{"post":{"tags":["Session"],"operationId":"Get_All_Sessions","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/Get_All_Sessions_Request"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Get_All_Sessions_Response"}}}}},"/api/Session/Logout_Specific_Session":{"post":{"tags":["Session"],"operationId":"Logout_Specific_Session","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/Logout_Specific_Session_Request"}}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/Logout_Specific_Session_Response"}}}}}},"definitions":{"Login_Request":{"required":["using_email","password","recaptcha_hash"],"type":"object","properties":{"using_email":{"description":"Should be TRUE if the user is trying to login with @link email. Otherwise, an username is expected.","type":"boolean"},"username":{"maxLength":20,"minLength":5,"type":"string"},"email":{"maxLength":27,"minLength":27,"type":"string"},"password":{"maxLength":20,"minLength":5,"type":"string"},"recaptcha_hash":{"type":"string"}}},"Login_Response":{"type":"object","properties":{"status_code":{"format":"int32","description":"0 is success, 1 is fail","type":"integer"},"display_message":{"type":"string"},"auth_token":{"description":"A hash that serve as a credential for later purposes \r\nShould be stored in localstorage / sessionstorage (if the user does not check the \"remember me\" option)","type":"string"}}},"Register_Request":{"required":["username","password","email","recaptcha_hash"],"type":"object","properties":{"username":{"maxLength":20,"minLength":5,"type":"string"},"password":{"maxLength":20,"minLength":5,"type":"string"},"email":{"maxLength":27,"minLength":27,"type":"string"},"recaptcha_hash":{"type":"string"}}},"Register_Response":{"type":"object","properties":{"status_code":{"format":"int32","description":"0 is success, 1 is fail","type":"integer"},"display_message":{"type":"string"}}},"Logout_Request":{"required":["auth_token"],"type":"object","properties":{"auth_token":{"maxLength":128,"minLength":128,"type":"string"}}},"Logout_Response":{"type":"object","properties":{"status_code":{"format":"int32","description":"<para>0 is success, 1 is fail</para>\r\n<para>fail may due to invalid auth token (user has already logged out)</para>","type":"integer"}}},"Get_All_Sessions_Request":{"required":["auth_token"],"type":"object","properties":{"auth_token":{"maxLength":128,"minLength":128,"type":"string"}}},"Get_All_Sessions_Response":{"type":"object","properties":{"status_code":{"format":"int32","description":"<para>0 is success, 1 is fail</para>\r\n<para>fail is due to invalid auth token (user has already logged out)</para>","type":"integer"},"sessions":{"description":"Return a list of session information.","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/AuthToken"}}}},"AuthToken":{"type":"object","properties":{"token":{"type":"string"},"userID":{"format":"int32","type":"integer"},"last_access_IP":{"type":"string"},"last_access_Location":{"type":"string"},"last_access_Time":{"format":"date-time","type":"string"},"last_access_Device":{"type":"string"},"last_access_Browser":{"type":"string"}}},"Logout_Specific_Session_Request":{"required":["auth_token","token_to_be_removed"],"type":"object","properties":{"auth_token":{"maxLength":128,"minLength":128,"type":"string"},"token_to_be_removed":{"description":"<para>the token that the user want to log it out</para>\r\n<para>should prevent the user logout its own session\r\n            this part is not checked on server side</para>","maxLength":128,"minLength":128,"type":"string"}}},"Logout_Specific_Session_Response":{"type":"object","properties":{"status_code":{"format":"int32","description":"<para>0 is success, 1, 2 is fail</para>\r\n<para>1 fail is due to invalid auth token (user has already logged out)</para>\r\n<para>2 fail is due to given session does not exist or not valid</para>","type":"integer"}}}}}